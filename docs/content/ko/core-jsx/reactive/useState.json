{"content":[{"type":"component","name":"Text","props":{"as":"h1","text":"useState","kind":"heading-06"}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"값에 따라 동적으로 동작하는 반응성이 필요한 모든 상황에서 상태를 사용합니다."}}]}}]}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"text":"예시","kind":"heading-03","as":"h4"}},{"type":"component","name":"Iframe","props":{"src":"https://rvjs.xyz/example/core-js/reactive/useState/ex1/"}},{"type":"component","name":"CodeSnippet","props":{"codeText":"import { useState } from '@rvjs/core'\n\nconst Counter = () => {\n  const [getCount, setCount] = useState(0)\n\n  return (\n    <div>\n      <h1>Count: {getCount()}</h1>\n      <button onClick={() => setCount(getCount() - 1)}>-1</button>\n      <button onClick={() => setCount(getCount() + 1)}>+1</button>\n    </div>\n  )\n}\n\nexport default Counter","language":"jsx","type":"multi","width":"100%","defaultShow":true}}]}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"text":"상태를 사용해야 하는 경우","kind":"heading-03","as":"h4"}},{"type":"component","name":"UnorderedList","props":{"children":[{"type":"component","name":"ListItem","props":{"children":[{"type":"component","name":"Text","props":{"as":"span","children":[{"type":"text","name":"text","props":{"text":"특정 값이 변할 때, 값을 나타내는 화면의 요소도 동시에 업데이트하고 싶은 경우"}}]}}]}},{"type":"component","name":"ListItem","props":{"children":[{"type":"component","name":"Text","props":{"as":"span","children":[{"type":"text","name":"text","props":{"text":"특정 값이 변할 때, 자동으로 실행할 동작이 있는 경우"}}]}}]}}]}}]}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"text":"레퍼런스","kind":"heading-03","as":"h4"}},{"type":"component","name":"CodeSnippet","props":{"codeText":"function useState<T>(initialState: T): [() => T, (newState: T) => void]","language":"typescript","type":"single","width":"100%","defaultShow":true}},{"type":"component","name":"Text","props":{"text":"매개변수","kind":"heading-compact-01"}},{"type":"component","name":"UnorderedList","props":{"children":[{"type":"component","name":"ListItem","props":{"children":[{"type":"element","name":"div","props":{"style":{"display":"grid","gridTemplateColumns":"20% 80%"},"children":[{"type":"component","name":"Text","props":{"children":[{"type":"component","name":"CodeSnippet","props":{"codeText":"initialState","language":"javascript","type":"inline"}}],"as":"span"}},{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"상태의 초기값입니다."}}],"as":"span"}}]}}]}}]}},{"type":"component","name":"Text","props":{"text":"반환 값","kind":"heading-compact-01"}},{"type":"component","name":"Text","props":{"children":[{"type":"component","name":"CodeSnippet","props":{"codeText":"useState","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":"는 각각 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"getState","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":"와 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"setState","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":" 두 개의 값을 가진 배열을 반환합니다."}}]}},{"type":"component","name":"UnorderedList","props":{"children":[{"type":"component","name":"ListItem","props":{"children":[{"type":"element","name":"div","props":{"style":{"display":"grid","gridTemplateColumns":"20% 80%"},"children":[{"type":"component","name":"Text","props":{"children":[{"type":"component","name":"CodeSnippet","props":{"codeText":"getState","language":"javascript","type":"inline"}}],"as":"span"}},{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"현재 상태를 반환하는 함수입니다."}}],"as":"span"}}]}}]}},{"type":"component","name":"ListItem","props":{"children":[{"type":"element","name":"div","props":{"style":{"display":"grid","gridTemplateColumns":"20% 80%"},"children":[{"type":"component","name":"Text","props":{"children":[{"type":"component","name":"CodeSnippet","props":{"codeText":"setState","language":"javascript","type":"inline"}}],"as":"span"}},{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"상태를 업데이트하고, 리렌더링을 포함한 연쇄적인 효과를 발생시킵니다."}}],"as":"span"}}]}}]}}]}}]}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"text":"제약 사항","kind":"heading-03","as":"h4"}},{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"객체 타입의 경우 상태 업데이트 시 새로운 객체를 할당해야 합니다."}}]}},{"type":"component","name":"Text","props":{"children":[{"type":"component","name":"CodeSnippet","props":{"codeText":"setState","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":"는 상태의 변화를 감지하기 위해 얕은 비교를 사용합니다. 따라서 객체 타입의 상태 업데이트 시 반드시 새로운 객체를 할당해야 합니다."}}]}},{"type":"component","name":"CodeSnippet","props":{"codeText":"const [ids, setIds] = useState([1, 2, 3])\n\n// Bad code\nids().push(4)\nsetIds(ids())\n\n// Good code\nsetIds([...ids(), 4])","language":"javascript","type":"multi","width":"100%","defaultShow":true}}]}},{"type":"element","name":"div","props":{"style":{"height":"60vh"}}},{"type":"component","name":"Link","props":{"href":"https://github.com/ILikeMintChocolate/rvjs/blob/docs/deploy/docs/content/ko/core-jsx/reactive/useState.json","isExternal":true,"children":[{"type":"component","name":"DocumentIcon","props":{"style":{"width":"1rem","filter":"brightness(0) saturate(100%) invert(25%) sepia(69%) saturate(3617%) hue-rotate(218deg) brightness(100%) contrast(104%)","z-index":"-1"}}},{"type":"component","name":"Text","props":{"text":"Raw Data From Github","color":"linkPrimary"}}]}}]}