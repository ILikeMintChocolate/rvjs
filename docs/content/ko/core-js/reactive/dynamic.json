{"content":[{"type":"component","name":"Text","props":{"as":"h1","text":"dynamic","kind":"heading-06"}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"요소의 속성에 반응성을 부여하기 위해 사용합니다."}}]}}]}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"text":"예시","kind":"heading-03","as":"h4"}},{"type":"component","name":"Iframe","props":{"src":"https://rvjs.xyz/example/core-js/reactive/dynamic/ex1/"}},{"type":"component","name":"CodeSnippet","props":{"codeText":"import { button, div, dynamic, h1, useState } from '@rvjs/core'\n\nconst Counter = () => {\n  const [getCount, setCount] = useState(0)\n\n  return div({\n    children: [\n      h1({\n        textContent: dynamic(() => `Count: ${getCount()}`),\n      }),\n      button({\n        textContent: '-1',\n        onclick: () => setCount(getCount() - 1),\n      }),\n      button({\n        textContent: '+1',\n        onclick: () => setCount(getCount() + 1),\n      }),\n    ],\n  })\n}\n\nexport default Counter","language":"javascript","type":"multi","width":"100%","defaultShow":true}}]}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"text":"레퍼런스","kind":"heading-03","as":"h4"}},{"type":"component","name":"CodeSnippet","props":{"codeText":"function dynamic<T>(valueFn: () => T): () => T","language":"typescript","type":"single","width":"100%","defaultShow":true}},{"type":"component","name":"Text","props":{"text":"매개변수","kind":"heading-compact-01"}},{"type":"component","name":"UnorderedList","props":{"children":[{"type":"component","name":"ListItem","props":{"children":[{"type":"element","name":"div","props":{"style":{"display":"grid","gridTemplateColumns":"20% 80%"},"children":[{"type":"component","name":"Text","props":{"children":[{"type":"component","name":"CodeSnippet","props":{"codeText":"valueFn","language":"javascript","type":"inline"}}],"as":"span"}},{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"동적으로 변하길 원하는 값을 함수로 감싸 전달합니다."}}],"as":"span"}}]}}]}}]}},{"type":"component","name":"Text","props":{"text":"반환 값","kind":"heading-compact-01"}},{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"값을 반환하는 함수를 반환합니다. 이 함수는 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"dynamic","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":" 함수의 반환 값임을 쉽게 알 수 있도록, 특별한  표식을 포함합니다."}}]}}]}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"text":"dynamic 함수를 사용해야 하는 이유","kind":"heading-03","as":"h4"}},{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"단순히 상태를 값으로 전달하게 되면, 요소는 해당 속성에 상태를 사용했다는 것을 감지하기 어렵습니다. "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"dynamic","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":" 함수 내부에서 상태의 값을 찾아야 앞으로 상태 변경을 감지해서 자동으로 값을 갱신하도록 할 수 있습니다."}}]}}]}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"text":"상태가 없어도 사용할 수 있나요?","kind":"heading-03","as":"h4"}},{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"네, 사용해도 됩니다."}}]}},{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"아래 예시처럼 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"dynamic","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":"의 리턴 값에 상태가 없더라도 아무 문제가 없습니다. 그렇기 때문에 만약 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"props","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":"로 받는 특정 값이 상태인지, 원시 타입인지 확실하지 않다면, 무조건 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"dynamic","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":"을 사용하는 것을 권장합니다. "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"dynamic","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":" 함수를 사용하는 것 자체로는 아무런 성능 저하가 발생하지 않습니다."}}]}},{"type":"component","name":"CodeSnippet","props":{"codeText":"h1({\n    textContent: dynamic(() => 'Hello World!'),\n})","language":"javascript","type":"multi","width":"100%","defaultShow":true}}]}},{"type":"element","name":"div","props":{"style":{"height":"60vh"}}},{"type":"component","name":"Link","props":{"href":"https://github.com/ILikeMintChocolate/rvjs/blob/docs/deploy/docs/content/ko/core-js/reactive/dynamic.json","isExternal":true,"children":[{"type":"component","name":"DocumentIcon","props":{"style":{"width":"1rem","filter":"brightness(0) saturate(100%) invert(25%) sepia(69%) saturate(3617%) hue-rotate(218deg) brightness(100%) contrast(104%)","z-index":"-1"}}},{"type":"component","name":"Text","props":{"text":"Raw Data From Github","color":"linkPrimary"}}]}}]}