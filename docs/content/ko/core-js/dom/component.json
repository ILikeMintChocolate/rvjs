{"content":[{"type":"component","name":"Text","props":{"as":"h1","text":"component","kind":"heading-06"}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"내부에서 특정 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"hook","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":"을 사용하는 경우 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"component","language":"javascript","type":"link","href":"#/ko/core-js/dom/component"}},{"type":"text","name":"text","props":{"text":" 함수를 통해 컴포넌트를 생성할 수 있습니다."}}]}}]}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"text":"예시","kind":"heading-03","as":"h4"}},{"type":"component","name":"Iframe","props":{"src":"https://rvjs.xyz/example/core-js/dom/component/ex1/"}},{"type":"component","name":"CodeSnippet","props":{"codeText":"import {\n  button,\n  component,\n  div,\n  onDestroy,\n  onMount,\n  Toggle,\n  useState,\n} from '@rvjs/core'\n\nconst App = component(() => {\n  const [show, setShow] = useState(false)\n\n  return div({\n    children: [\n      button({\n        textContent: 'Toggle',\n        onclick: () => setShow(!show()),\n      }),\n      Toggle(show, () => {\n        return Content()\n      }),\n    ],\n  })\n})\n\nconst Content = component(() => {\n  onMount(() => {\n    console.log('Content mounted')\n  })\n\n  onDestroy(() => {\n    console.log('Content destroyed')\n  })\n\n  return div({\n    textContent: 'Hello World!',\n  })\n})\n\nexport default App","language":"javascript","type":"multi","width":"100%","defaultShow":true}}]}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"text":"레퍼런스","kind":"heading-03","as":"h4"}},{"type":"component","name":"CodeSnippet","props":{"codeText":"function component<T>(componentFn: (props: T) => Block): ComponentBlock","language":"typescript","type":"single","width":"100%","defaultShow":true}},{"type":"component","name":"Text","props":{"text":"매개변수","kind":"heading-compact-01"}},{"type":"component","name":"UnorderedList","props":{"children":[{"type":"component","name":"ListItem","props":{"children":[{"type":"element","name":"div","props":{"style":{"display":"grid","gridTemplateColumns":"20% 80%"},"children":[{"type":"component","name":"Text","props":{"children":[{"type":"component","name":"CodeSnippet","props":{"codeText":"componentFn","language":"javascript","type":"inline"}}],"as":"span"}},{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"매개변수로 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"props","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":"를 받으며, 반환 값으로 화면에 렌더링 될 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"Block","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":" 타입의 노드를 반환합니다."}}],"as":"span"}}]}}]}}]}},{"type":"component","name":"Text","props":{"text":"반환 값","kind":"heading-compact-01"}},{"type":"component","name":"UnorderedList","props":{"children":[{"type":"component","name":"ListItem","props":{"children":[{"type":"element","name":"div","props":{"style":{"display":"grid","gridTemplateColumns":"20% 80%"},"children":[{"type":"component","name":"Text","props":{"children":[{"type":"component","name":"CodeSnippet","props":{"codeText":"ComponentBlock","language":"javascript","type":"inline"}}],"as":"span"}},{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"DOM 트리에 대응하는 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"@rvjs/core","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":"의 블록 트리 노드입니다."}}],"as":"span"}}]}}]}}]}}]}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"text":"component 함수를 사용해야 하는 경우","kind":"heading-03","as":"h4"}},{"type":"component","name":"UnorderedList","props":{"children":[{"type":"component","name":"ListItem","props":{"children":[{"type":"component","name":"Text","props":{"as":"span","children":[{"type":"text","name":"text","props":{"text":"내부에 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"useGlobalState","language":"javascript","type":"link","href":"#/ko/core-js/reactive/useGlobalState"}},{"type":"text","name":"text","props":{"text":", "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"onMount","language":"javascript","type":"link","href":"#/ko/core-js/reactive/onMount"}},{"type":"text","name":"text","props":{"text":", "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"onDestroy","language":"javascript","type":"link","href":"#/ko/core-js/reactive/onDestroy"}},{"type":"text","name":"text","props":{"text":", "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"createContext","language":"javascript","type":"link","href":"#/ko/core-js/reactive/createContext"}},{"type":"text","name":"text","props":{"text":" 함수를 사용하는 경우"}}]}}]}},{"type":"component","name":"ListItem","props":{"children":[{"type":"component","name":"Text","props":{"as":"span","children":[{"type":"component","name":"CodeSnippet","props":{"codeText":"Router","language":"javascript","type":"link","href":"#/ko/core-js/router/router"}},{"type":"text","name":"text","props":{"text":"에서 특정 path에 대응하는 컴포넌트로 사용하는 경우"}}]}}]}}]}}]}},{"type":"component","name":"Section","props":{"children":[{"type":"component","name":"Text","props":{"text":"모든 컴포넌트에 component 함수를 사용해도 되나요?","kind":"heading-03","as":"h4"}},{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"권장하는 방식은 위에 나열한 상황에만 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"component","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":" 함수를 사용하는 것입니다."}}]}},{"type":"component","name":"Text","props":{"children":[{"type":"text","name":"text","props":{"text":"rvjs는 블록 노드로 구성된 트리 구조를 가지고 있습니다. 그리고 요소를 추가 또는 삭제 시, 관련된 모든 하위 블록 노드를 순회하는 동작을 수행합니다. 그렇기 때문에 블록 노드 개수가 성능에 영향을 줄 수 있습니다. 블록 노드는 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"div","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":", "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"h1","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":" 등 "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"element","language":"javascript","type":"link","href":"#/ko/core-js/dom/element"}},{"type":"text","name":"text","props":{"text":"를 생성하거나, "}},{"type":"component","name":"CodeSnippet","props":{"codeText":"component","language":"javascript","type":"inline"}},{"type":"text","name":"text","props":{"text":" 함수를 통해 컴포넌트를 생성할 때 만들어집니다. 그렇기 때문에 사용할 필요가 없는 상황에서 사용할 경우, 불필요한 블록 노드도 순회하여 성능에 영향을 줄 수 있습니다."}}]}}]}},{"type":"element","name":"div","props":{"style":{"height":"60vh"}}},{"type":"component","name":"Link","props":{"href":"https://github.com/ILikeMintChocolate/rvjs/blob/docs/deploy/docs/content/ko/core-js/dom/component.json","isExternal":true,"children":[{"type":"component","name":"DocumentIcon","props":{"style":{"width":"1rem","filter":"brightness(0) saturate(100%) invert(25%) sepia(69%) saturate(3617%) hue-rotate(218deg) brightness(100%) contrast(104%)","z-index":"-1"}}},{"type":"component","name":"Text","props":{"text":"Raw Data From Github","color":"linkPrimary"}}]}}]}